library(tidyverse)
library(stringr)
library(glue)
library(magrittr)

file.create("ga")
write('\noutput_dir: "docs"', file="_bookdown.yml",append=TRUE)

replace_in_file <- function(file, pattern, replacement){
  a <- read_file(file) 
  a <- str_replace_all(a, pattern, replacement)
  write(a, file)
}

replace_in_file("index.Rmd", "A Minimal Book Example", "Writing R extensions")
replace_in_file("index.Rmd", "Yihui Xie", "R Development Core Team")
replace_in_file("index.Rmd", "Yihui Xie", "R Development Core Team")
replace_in_file("index.Rmd", "Yihui Xie", "R Development Core Team")
replace_in_file("index.Rmd", 
                "This is a minimal example of using the bookdown package to write a book. The output format for this example is bookdown::gitbook.", 
                "Writing R Extensions covers how to create your own packages, write R help files, and the foreign language (C, C++, Fortran, ...) interfaces.	")
# get epub

download.file("https://cran.r-project.org/doc/manuals/r-release/R-exts.epub", destfile = "r-exts.epub")
unzip(zipfile = "r-exts.epub")
file.remove(c("toc.ncx","titlepage.xhtml", "stylesheet.css"))

# Rename file and keep a track of file change
rename_file <- function(name){
  new_file <- gsub("(R-exts)_split_([0-9]*)", "\\2-\\1", name)
  new_file <- gsub("^0", "", new_file)
  file.rename(from = name, to = new_file)
  return(data.frame(orig = name, new = new_file))
}

file_names_change <- purrr::map_df(list.files(pattern = "R-exts"), rename_file)

html_converter <- function(file){
  file_name <- gsub("\\.html", "", file)
  system(command = glue("pandoc {file_name}.html -o {file_name}.Rmd"))
}

purrr::walk(list.files(pattern = "R-exts"), html_converter)

purrr::walk(list.files(pattern = "\\.html"), file.remove)

clean_html_rmd <- function(file){
  
  a <- readLines( file )
  
  a %<>% str_replace_all("<h1 .*>([A-Za-z0-9])", "# \\1") %>%
    str_replace_all("</h1>", "")%>% 
    str_replace_all("<h2 .*>([A-Za-z0-9])", "# \\1") %>%
    str_replace_all("</h2>", "") %>%
    str_replace_all("# [0-9]+", "# ")
  write(a, file = file)
}

purrr::walk(list.files(pattern = "Rmd"), clean_html_rmd)

clean_auto_ref <- function(file){
  
  a <- readLines( file )
  
  a %<>% str_replace_all("(R-intro)_split_([0-9]*)", "\\2-\\1") %>%
    str_replace_all("^0", "")
  write(a, file = file)
  
}

purrr::walk(list.files(pattern = "Rmd"), clean_auto_ref)

build_url_ref <- function(file){
  a <- readLines( file )
  url <- tolower(a[1]) %>%
    str_replace_all("# *", "") %>%
    str_replace_all(" ", "-")
  return(glue("{url}.html"))
}

file_names_change$url <- map(list.files(pattern = "exts.Rmd"), build_url_ref)

# Remove some useless files

file.remove(c("01-intro.Rmd","02-literature.Rmd","03-method.Rmd",
              "04-application.Rmd", "05-summary.Rmd","06-references.Rmd"))
file.remove("00-R-exts.Rmd")
file.remove("01-R-exts.Rmd")

file.append("index.Rmd", "02-R-exts.Rmd")

file.append("index.Rmd", "03-R-exts.Rmd")

# Prevent titles in index from being in the table of content

replace_in_file("index.Rmd", pattern = "(# [A-Za-z0-9 ]*)", "\\1 {-}")

file.remove(c("02-R-exts.Rmd", "03-R-exts.Rmd"))

# Manually replace url 

clean_url <- function(file){
  a <- readLines( file )
  
  a %<>% str_replace_all("R-exts_split_000.html", "introduction-and-preliminaries.html") %>%
    str_replace_all("005-R-intro.html", "simple-manipulations-numbers-and-vectors.html") %>%
    str_replace_all("006-R-intro.html", "objects-their-modes-and-attributes.html") %>%
    str_replace_all("007-R-intro.html", "ordered-and-unordered-factors.html") %>%
    str_replace_all("008-R-intro.html", "arrays-and-matrices.html") %>%
    str_replace_all("009-R-intro.html", "lists-and-data-frames.html") %>%
    str_replace_all("010-R-intro.html", "reading-data-from-files.html") %>%
    str_replace_all("011-R-intro.html", "probability-distributions.html") %>%
    str_replace_all("012-R-intro.html", "grouping-loops-and-conditional-execution.html") %>%
    str_replace_all("013-R-intro.html", "writing-your-own-functions.html") %>%
    str_replace_all("014-R-intro.html", "statistical-models-in-r.html") %>%
    str_replace_all("015-R-intro.html", "graphical-procedures.html") %>%
    str_replace_all("016-R-intro.html", "packages.html") %>%
    str_replace_all("017-R-intro.html", "os-facilities.html") %>%
    str_replace_all("018-R-intro.html", "appendix-a-a-sample-session.html") %>%
    str_replace_all("019-R-intro.html", "appendix-b-invoking-r.html") %>%
    str_replace_all("020-R-intro.html", "appendix-c-the-command-line-editor.html") %>%
    str_replace_all("021-R-intro.html", "appendix-d-function-and-variable-index.html") %>%
    str_replace_all("022-R-intro.html", "appendix-e-concept-index.html") %>%
    str_replace_all("023-R-intro.html", "appendix-f-references.html") 
  write(a, file = file)
}

purrr::walk(list.files(pattern = "Rmd"), clean_url)

a <- "R-exts_split_000.html 00-R-exts.html, R-exts_split_001.html 01-R-exts.html"

str_replace_all(a, file_names_change$orig, file_names_change$url)

# Check for broken links
library(rvest)

all_links_page <- function(url){
  link <- read_html(url) %>%
    html_nodes("a") %>%
    html_attr("href") 
  
  data.frame(base = url, 
             url = link)
}

home <- all_links_page("http://colinfay.me/intro-to-r/")

complete_url <- function(url, canonical){
  if(grepl("^http", url) != 0){
    as.character(url)
  } else {
    paste0(canonical, url)
  }
}

home$url %<>% map(complete_url, canonical = "http://colinfay.me/intro-to-r/")

all_link_website <- map_df(home$url, all_links_page)
all_link_website$url %<>% map(complete_url, canonical = "http://colinfay.me/intro-to-r/")
all_link_website$res <- map(all_link_website$url, ~httr::status_code(httr::GET(.x)))

fourofour <- filter(all_link_website, res != 200)[grepl("colin", fourofour$base), ]

# Do some manual work here

# Build \o/

bookdown::render_book("index.Rmd", "bookdown::gitbook")
